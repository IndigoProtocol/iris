version: '3.9'

volumes:
  mysql-data:

networks:
  default:
    name: iris-network

services:
  mysql:
    platform: linux/x86_64
    image: mysql:8.0-debian
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD      
      timeout: 20s
      retries: 10      
    expose:
      - "3307"
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always
  iris-indexer:
    container_name: iris-indexer
    expose:
      - "8080"
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      LOG_DIR: /usr/src/app/logs/indexer
      VERBOSE: "true"
      OGMIOS_HOST: ${OGMIOS_HOST}
      OGMIOS_PORT: ${OGMIOS_PORT}
      OGMIOS_TLS: ${OGMIOS_TLS}
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USERNAME: ${MYSQL_USER}
      DATABASE_PASSWORD: ${MYSQL_PASSWORD}
      DATABASE: ${MYSQL_DATABASE}
      OPERATION_WEBSOCKET_PORT: 8080
      API_PORT: 3000
      GITHUB_ACCESS_TOKEN: ${GITHUB_ACCESS_TOKEN}
      RUN_APP: indexer
    depends_on:
      mysql:
        condition: service_healthy
    logging:
      options:
        max-size: 10m
        max-file: "5"
  iris-api:
    container_name: iris-api
    expose:
      - "3000:3000"
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      LOG_DIR: /usr/src/app/logs/api
      VERBOSE: "true"
      OGMIOS_HOST: ${OGMIOS_HOST}
      OGMIOS_PORT: ${OGMIOS_PORT}
      OGMIOS_TLS: ${OGMIOS_TLS}
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USERNAME: ${MYSQL_USER}
      DATABASE_PASSWORD: ${MYSQL_PASSWORD}
      DATABASE: ${MYSQL_DATABASE}
      OPERATION_WEBSOCKET_PORT: 8080
      API_PORT: 3000
      GITHUB_ACCESS_TOKEN: ${GITHUB_ACCESS_TOKEN}
      RUN_APP: api
    depends_on:
      mysql:
        condition: service_healthy
    logging:
      options:
        max-size: 10m
        max-file: "5"
